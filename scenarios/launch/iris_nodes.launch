<launch>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="ns" default="iris"/>
  <arg name="log_file" default="$(arg ns)"/>
  <arg name="headless" default="false"/>

<!-- Simulation -->
  <arg name="simulation" default="true"/>
  <arg name="docker" default="docker-iris-1"/>

<!-- Initial position -->
  <arg name="x" default="0.0"/>
  <arg name="y" default="0.0"/>

<!-- Simulated load -->
  <arg name="suspended_load" default="false"/>
  <arg name="load_link_height" default="1"/> <!-- [m] -->
  <arg name="load_mass" default="0.1"/> <!-- [kg] -->


<!-- Visualisation -->
  <arg name="rviz" default="false"/> <!-- No more than one drone visualisable -->

<!-- |||| LAUNCH |||| -->

<!-- IRIS LAUNCH -->
  <!-- If simulated -->
  <group if="$(arg simulation)">
    <include file="$(find scenarios)/launch/sim_iris/$(arg ns).launch">
      <arg name="x" value="$(arg x)"/>
      <arg name="y" value="$(arg y)"/>

      <arg name="suspended_load" value="$(arg suspended_load)"/>
      <arg name="load_link_height" value="$(arg load_link_height)"/> <!-- [m] -->
      <arg name="load_mass" value="$(arg load_mass)"/> <!-- [kg] -->
    </include>
  </group>

  <!-- Otherwise -->
  <group unless="$(arg simulation)">
    <!-- <include file="$(find scenarios)/launch/real_iris/$(arg ns).launch"/> -->
  </group>

  <group ns="$(arg ns)">
<!-- Security gard boundaries -->
    <arg name="boundaries_shape" default="cube"/>
    <arg name="boundaries_centerx" default="0"/>
    <arg name="boundaries_centery" default="0"/>
    <arg name="boundaries_side" default="100"/>
    <arg name="boundaries_radius" default="100"/>
    <arg name="boundaries_height" default="100"/>

    <!-- SECURITY GARD -->
    <node name="security_guard" pkg="controller" type="security_guard.py" clear_params="true" output="screen">
      <param name="shape" value="$(arg boundaries_shape)"/>
      <param name="centerx" value="$(arg boundaries_centerx)"/>
      <param name="centery" value="$(arg boundaries_centery)"/>
      <param name="side" value="$(arg boundaries_side)"/>
      <param name="radius" value="$(arg boundaries_radius)"/>
      <param name="height" value="$(arg boundaries_height)"/>
    </node>


    <node name="lander" pkg="controller" type="lander.py" output="screen" respawn="true"/>
    <node name="PID_controller" pkg="controller" type="PID_controller.py" output="screen"/>

    <!-- RVIZ LINK -->
    <group if="$(arg rviz)">
      <node name="quadstate_to_path" pkg="controller" type="quadstate_to_path.py" respawn="true"/>
    </group>

  </group>

</launch>
