<launch>
  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="ns" default="iris"/>
  <arg name="log_file" default="$(arg ns)"/>
  <arg name="headless" default="false"/>


<!-- Visualisation -->
  <arg name="rviz" default="true"/> <!-- No more than one drone visualisable -->
  


<!-- Simulation -->
  <arg name="simulation"/> <!-- No more than one drone visualisable -->
  

<!-- |||| LAUNCH |||| -->

  <group ns="$(arg ns)">
<!-- Security gard boundaries -->
    <arg name="boundaries_shape" default="cube"/>
    <arg name="boundaries_centerx" default="0"/>
    <arg name="boundaries_centery" default="0"/>
    <arg name="boundaries_side" default="100"/>
    <arg name="boundaries_radius" default="100"/>
    <arg name="boundaries_height" default="100"/>

    <!-- SECURITY GARD -->
    <node name="security_guard" pkg="controller" type="security_guard.py" clear_params="true" output="screen">
      <param name="shape" value="$(arg boundaries_shape)"/>
      <param name="centerx" value="$(arg boundaries_centerx)"/>
      <param name="centery" value="$(arg boundaries_centery)"/>
      <param name="side" value="$(arg boundaries_side)"/>
      <param name="radius" value="$(arg boundaries_radius)"/>
      <param name="height" value="$(arg boundaries_height)"/>
    </node>


    <node name="lander" pkg="controller" type="lander.py" output="screen" respawn="false"/>
    <node name="blender" pkg="controller" type="blender.py" output="screen"/> 

    <!-- RVIZ LINK -->
    <group if="$(arg rviz)">
      <node name="quadstate_to_path" pkg="controller" type="quadstate_to_path.py" respawn="false"/>
    </group>

    <!-- PARAM INIT -->
    <group unless="$(arg simulation)">
      <node pkg="mavros" type="mavparam" name="mavparam" args="-n mavros load $(find scenarios)/launch/iris/default_param_override.param"/>
    </group>

    <node name="error_vis" pkg="controller" type="error_vis.py" respawn="false"/>

    <param name="perspective_file" type="string" command="$(find gui)/scripts/rqt_config_parser.sh $(find gui)/config/IrisPlot.perspective $(arg ns) $(find gui)/config/tmp/IrisPlot_$(arg ns).perspective" />
    <node name="rqt_perspective" pkg="rqt_gui" type="rqt_gui" args="--perspective-file $(find gui)/config/tmp/IrisPlot_$(arg ns).perspective"/>
  </group>

</launch>
